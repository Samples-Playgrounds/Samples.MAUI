<Project>
  <PropertyGroup>
      <LangVersion>Latest</LangVersion>
      <Nullable>enable</Nullable>
      <ImplicitUsings>enable</ImplicitUsings>
      <!--
      <SingleProject>true</SingleProject>
      <CheckEolTargetFramework>false</CheckEolTargetFramework>
      -->
  </PropertyGroup>

  <PropertyGroup>
    <!--
        See
          https://aka.ms/dotnet/msbuild/customize
        for more details on customizing your build

        This file is used to override the default build properties of the .NET Core SDK.
        More info:
          https://aka.ms/sdkimplicitprops

        https://garywoodfine.com/what-is-this-directory-build-props-file-all-about/
    -->
    <OutputType>Exe</OutputType>
    <UseMaui>true</UseMaui>
    <SingleProject>true</SingleProject>
    <ImplicitUsings>enable</ImplicitUsings>
    <EnableDefaultCssItems>false</EnableDefaultCssItems>
    <CreatePackage>false</CreatePackage>
  </PropertyGroup>

  <PropertyGroup>
    <AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
  </PropertyGroup>

      <!--
        Maintanability + Security: NuGet Central Package Management
      -->
      <PropertyGroup>
        <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
        <!--
        <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>
        -->
    </PropertyGroup>

    <PropertyGroup>
        <!--
        The MSAL.snk has both private and public keys
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)/build/MSAL.snk</AssemblyOriginatorKeyFile>
        <DelaySign>false</DelaySign>

        <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)/build/SolutionWideAnalyzerConfig.ruleset</CodeAnalysisRuleSet>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
        -->
    </PropertyGroup>

    <PropertyGroup>
        <!--
        https://github.com/dotnet/roslyn-analyzers
        Microsoft.CodeAnalysis.NetAnalyzers

        EnableNETAnalyzers
        -->
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
		<AnalysisMode>AllEnabledByDefault</AnalysisMode>
		<CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <AnalysisLevel>latest</AnalysisLevel>
		<RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
		<RunAnalyzersDuringLiveAnalysis>true</RunAnalyzersDuringLiveAnalysis>
		<Deterministic>true</Deterministic>
		<Features>strict</Features>
		<ReportAnalyzer>true</ReportAnalyzer>
    <!--
      AnalysisLevel
      -->
  </PropertyGroup>

    <!--
    <Import Project="../Directory.Build.props" />
    <Import Project="./Rules-N-Recommendations.ruleset" Condition="Exists('./Rules-N-Recommendations.ruleset')" />
    -->

    <!--
    https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-8/
    https://devblogs.microsoft.com/dotnet/dotnet-8-performance-improvements-in-dotnet-maui/
    -->
  <PropertyGroup Condition=" $(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release' ">
    <AndroidStripILAfterAOT>true</AndroidStripILAfterAOT>
    <AndroidEnableProfiledAot>true</AndroidEnableProfiledAot>

    <AndroidEnableMarshalMethods>true</AndroidEnableMarshalMethods>
    <!-- Note that single-architecture apps will be most successful -->
    <RuntimeIdentifier>android-arm64</RuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios' and '$(Configuration)' == 'Release'">
    <!-- PublishAot=true indicates NativeAOT, while omitting this property would use Mono's AOT -->
    <PublishAot>true</PublishAot>
  </PropertyGroup>

</Project>
